WEB ELEMENTS

ALL THE UI COMPONENTS SEEN ON A WEB PAGE ARE KNOWN AS WEB ELEMENTS. IN ORDER TO INTERACT WITH THEM USING SELENIUM, WE NEED TO LOCATE THEM FIRST.

'FINDELEMENT()' AND 'FINDELEMENTS()' ARE THE TWO METHODS FOR LOCATING WEB ELEMENTS IN A WEB PAGE.

BOTH METHODS TAKE THE 'BY' CLASS AS AN ARGUMENT. THIS CLASS CONTAINS A LOT OF STATIC METHODS WE CAN USE WHEN LOCATING ELEMENTS, SO BY SIMPLY TYPING 'BY' INTO A TEST METHOD CLASS AND DRILLING DOWN INTO IT, WE SEE THE LIST OF OPTIONS AVAILABLE TO US. 

1. BY.ID(); - THIS WILL LOCATE THE ELEMENT BY USING THE 'ID' ATTRIBUTE.
2. BY.CLASSNAME(); - THIS WIll LOCATE THE ELEMENT BY USING THE 'CLASS' ATTRIBUTE.
3. BY.LINKTEXT(); - THIS WILL LOCATE THE ELEMENT BY USING THE HYPERLINK TEXT.
4. BY.PARTIALLINKTEXT(); - THIS WILL LOCATE THE ELEMENT BY USING A PART OF THE HYPERLINK TEXT.
5. BY CSSSELECTOR(); - THIS WILL LOCATE THE ELEMENT USING THE CSS SELECTOR.
6. BY.NAME(); - THIS WILL LOCATE THE ELEMENT BY THE 'NAME' ATTRIBUTE.
7. BY.TAGNAME(); - THIS WILL LOCATE THE ELEMENT BY USING THE 'HTML TAG'.
8. BY.XPATH(); - THIS WILL LOCATE THE ELEMENT BY USING THE 'XPATH'.

SO IN OUR TESTSCRIPT FOLDER, CREATE ANOTHER FOLDER AND CALL IT 'WEBELEMENTS' OR ANYTHING SIMILAR SOUNDING. IN IT, CREATE A CLASS AND A TEST METHOD. ENSURE THAT THEY ARE GIVEN THE ATTRIBUTES [TESTCLASS] AND [TESTMETHOD] RESPECTIVELY.
	
	[TESTCLASS]
	PUBLIC CLASS TESTWEBELEMENTS{
		
		[TESTMETHOD]
		PUBLIC VOID GETELEMENT{
			NAVIGATIONHELPER.NAVIGATETOURL(OBJECTREPOSITORY.CONFIG.GETWEBSITE());
		
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.ID("searchTerms"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.TAGNAME("class"));	OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.CLASSNAME("opencart-icon-opencart-open-source-and-free"));	OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.XPATH("/html/body/div/div[2]/div[2]/div[3]/h4/i"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.LINKTEXT("Marketplace"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.PARTIALLINKTEXT("Market"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.CSSSELECTOR(".nav > li:nth-child(4) > a:nth-child(1)"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.NAME(""));
		}
	}
	
LET'S SUPPOSE THAT THE ATTRIBUTE SUPPLIED DOES NOT EXIST IN THE HTML BODY, WE CAN USE A TRY-CATCH BLOCK TO HANDLE THE NOSUCHELEMENT EXCEPTION

SO WE TAKE ALL THE ABOVE CODE AND STICK IT INSIDE THE TRY-CATCH BLOCK 

	NAVIGATIONHELPER.NAVIGATETOURL(OBJECTREPOSITORY.CONFIG.GETWEBSITE());
	
	TRY {
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.ID("searchTerms"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.TAGNAME("class"));	OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.CLASSNAME("opencart-icon-opencart-open-source-and-free"));	OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.XPATH("/html/body/div/div[2]/div[2]/div[3]/h4/i"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.LINKTEXT("Marketplace"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.PARTIALLINKTEXT("Market"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.CSSSELECTOR(".nav > li:nth-child(4) > a:nth-child(1)"));
			OBJECTREPOSITORY.DRIVER.FINDELEMENT(BY.NAME(""));
	}
	CATCH (NOSUCHELEMENTEXCEPTION E){
		CONSOLE.WRITELINE(E);
	}

IF WE RUN THE ABOVE CODE, IT SHOULD LOCATE AND RETURN ALL THE WEBELEMENTS.

FINDELEMENT(); METHOD IS USED TO RETURN SINGLE ELEMENTS, BUT TO RETURN MULTIPLE ELEMENTS INSIDE A LIST, WE USE THE FINDELEMENTS(); METHOD.

WHAT IS A LIST? THIS IS SIMPLY A COLLECTION OF DATA.

WE USE THE ILIST<> INTERFACE TO HANDLE THIS AND THE FORMAT IS:
	1. ILIST - THE 'I' IN FRONT DENOTES THAT THIS IS AN INTERFACE
	2. INSIDE THE '<>', WE SPECIFY THE DATATYPE OF THE LIST

TO CREATE A LIST, WE CAN ADD DATA TO IT:
	ILIST<STRING> LIST = NEW LIST<STRING>();
	LIST.ADD(OBJECT ONE);
	LIST.ADD(OBJECT TWO);
	LIST.ADD(OBJECT THREE);
	LIST.ADD(OBJECT FOUR);
	
WE CAN THEN USE THE 'COUNT' METHOD TO RETURN THE SIZE OF THE LIST
	CONSOLE.WRITELINE("THE LIST SIZE IS: {0}", LIST.COUNT);

WE CAN ALSO REMOVE DATA FROM THE LIST BY:
	LIST.REMOVEAT(0/1/2/etc);

AND COUNTING AGAIN TO CONFIRM THE DELETION
	CONSOLE,WRITELINE("THE LIST SIZE IS NOW: {0}", LIST.COUNT);
	
TO RETURN THE VALUE/S OF DATA IN A LIST, WE CAN CALL THEM BY THEIR INDEX:
	CONSOLE.WRITELINE("LIST NUMBER 1 IS {0}", LIST[0]);
	CONSOLE.WRITELINE("LIST NUMBER 2 IS {0}", LIST[1]);
	CONSOLE.WRITELINE("LIST NUMBER 3 IS {0}", LIST[2]);
	
TO CLEAR THE ITEMS IN A LIST, WE SIMPLY USE:
	LIST.CLEAR();

THEN CONFIRM THE CLEARING BY:
	CONSOLE,WRITELINE("THE CLEARED LIST SIZE IS NOW: {0}", LIST.COUNT);

NOW THAT WE KNOW ABOUT LISTS, THE FINDELEMENTS(); METHOD WILL ALSO RETURN A READ-ONLY LIST OF ELEMENTS, THAT IS, THEY CAN'T BE MODIFIED. TO GET THE LIST, WE CAN USE:

	OBJECTREPOSITORY.DRIVER.FINDELEMENTS(BY.TAGNAME("CLASS"));
	
IF WE HOVER OUR MOUSE OVER IT, WE WILL SEE THAT THE RETURN TYPE IS A 'READ-ONLY COLLECTION' OF TYPE WEBELEMENT. THE CODE CAN THEN BE MODIFIED TO BECOME:
	READONLYCOLLECTION<IWEBELEMENT> LISTCOLL = OBJECTREPOSITORY.
		DRIVER.
			FINDELEMENTS(BY.TAGNAME("CLASS"));
			
IWEBELEMENT IS AN INTERFACE THAT CONTAINS PRE-DEFINED METHODS FOR HANDLING ELEMENTS.

WHEN WE CALL THE FINDELEMENTS METHOD, IT WILL LIST ALL THE WEBELEMENTS WITH THE MATCHING TAGNAME OF 'CLASS'.

	CONSOLE.WRITELINE("SIZE OF THE LISTCOLL IS: {0}", LISTCOLL.COUNT);
	CONSOLE.WRITELINE("FIRST ELEMENT IN LISTCOLL IS: {0}", LISTCOLL.ELEMENTAT[0]);
	
